# NB: this name is used in the status badge
name: build

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 6"  # 5:00 UTC every Saturday

jobs:
  check_duplicate_runs:
    name: Check for duplicate runs
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          concurrent_skipping: same_content
          cancel_others: true
          skip_after_successful_duplicate: false
          paths_ignore: '["**/README.rst", "**/CHANGES.rst", "**/HACKING.rst", "**/LICENSE"]'
          do_not_skip: '["pull_request"]'

  build:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: check_duplicate_runs
    if: ${{ needs.check_duplicate_runs.outputs.should_skip != 'true' }}

    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - name: Install OS dependencies
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Git clone
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools wheel
          python -m pip install -U coverage
          python -m pip install -e .[test]

      - name: Run tests
        run: coverage run tests.py

      - name: Check test coverage
        run: |
          coverage report -m --fail-under=100
          coverage xml

      - name: Report to coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.xml

  lint:
    name: ${{ matrix.toxenv }}
    needs: check_duplicate_runs
    runs-on: ubuntu-latest
    if: ${{ needs.check_duplicate_runs.outputs.should_skip != 'true' }}

    strategy:
      matrix:
        toxenv:
          - flake8
          - isort
          - check-manifest
          - check-python-versions

    steps:
      - name: Git clone
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.default_python || '3.12' }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.default_python || '3.12' }}"

      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.toxenv }}-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools wheel
          python -m pip install -U tox

      - name: Run ${{ matrix.toxenv }}
        run: python -m tox -e ${{ matrix.toxenv }}
